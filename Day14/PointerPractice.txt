#include "helper.hpp"
#include <iostream>
#include <string>
#include <vector>


double arraymodSum(myVector &vec1){
 double sum = 0;
 for(int i = 0; i < vec1.size; i++){
   sum = sum + vec1.data[i];
 }
 return sum;
}

void growMyVector(myVector& vec1){
  if(vec1.size == vec1.capacity){
    double* tempArray = new double [vec1.capacity*2];
    for(int i =0; i<vec1.size; i++){
      tempArray[i] = vec1.data[i];
    }
    delete[] vec1.data;
    vec1.data = tempArray;
    vec1.capacity = vec1.capacity*2;
    tempArray = nullptr;
    for (int i = vec1.size; i < vec1.capacity; i++){
      vec1.data[i] =-1;
    }
    for (int i = 0; i< vec1.capacity; i++){
      std :: cout << vec1.data[i] << "\n";
    }
  }
}


int main(int argc, const char * argv[]) {
  myVector vec1;
  vec1.data = new double [10];
  vec1.capacity = 10;
  vec1.size = 10;
  for(int i =0; i < vec1.size; i ++){
    vec1.data[i] = 1.0;
  }
  std :: cout << arraymodSum(vec1) << "\n";
  growMyVector(vec1);
  delete vec1.data;
  vec1.data = nullptr;
return 0;
}
